# Generated by Django 2.2.20 on 2021-08-05 14:17

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('products', '0008_remove_gps_vehicle'),
        ('clients', '0007_auto_20210805_1336'),
        ('workorders', '0002_auto_20210125_2056'),
    ]

    operations = [
        migrations.CreateModel(
            name='WorkOrderProxy',
            fields=[
            ],
            options={
                'verbose_name_plural': 'зведені дані сервісного відділу',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workorders.workorder',),
        ),
        migrations.AddField(
            model_name='workorder',
            name='amount_fuel_sensor',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='введіть кількість ТІЛЬКИ ЯКЩО ПРОЕКТ', null=True, verbose_name='кіл-ть ДВРП'),
        ),
        migrations.AddField(
            model_name='workorder',
            name='amount_gps',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='введіть кількість ТІЛЬКИ ЯКЩО ПРОЕКТ', null=True, verbose_name='кіл-ть СКТ'),
        ),
        migrations.AddField(
            model_name='workorder',
            name='executor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_orders', to=settings.AUTH_USER_MODEL, verbose_name='виконавець'),
        ),
        migrations.AddField(
            model_name='workorder',
            name='trip_day',
            field=models.FloatField(blank=True, default=0, help_text='Кількість днів нарахування добових монтажнику', null=True, verbose_name='Добові дні'),
        ),
        migrations.AddField(
            model_name='workorder',
            name='trip_day_costs_executor',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Сума коомпенсації монтажнику\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='грн добових \nмонтажнику'),
        ),
        migrations.AlterField(
            model_name='completedworks',
            name='info',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name='додаткова інформація\nз протоколу огляду'),
        ),
        migrations.AlterField(
            model_name='completedworks',
            name='payer',
            field=models.CharField(choices=[('Клієнт', 'Клієнт'), ('Експертиза', 'Експертиза'), ('СКТ', 'СКТ'), ('монтажник', 'монтажник'), ('виробник', 'виробник')], default='Клієнт', help_text='Оберіть платника', max_length=100, verbose_name='Платник'),
        ),
        migrations.AlterField(
            model_name='completedworks',
            name='used_equipment',
            field=models.ManyToManyField(blank=True, null=True, related_name='used_equipment', to='products.Equipment', verbose_name='використане обладнання'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='add_costs_client',
            field=models.IntegerField(blank=True, default=0, help_text='Вартість додаткових витрат для клієнта', null=True, verbose_name='грн за ДВ \nклієнту'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='add_costs_executor',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Сума коомпенсації за додаткові витрати монтажнику', null=True, verbose_name='грн за ДВ \nмонтажнику'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='milege',
            field=models.PositiveIntegerField(blank=True, default=0, null=True, verbose_name='пробіг (км)'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='milege_price_client',
            field=models.IntegerField(blank=True, default=0, help_text='Вартість пробігу для клієнта\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='грн за км клієнту'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='milege_price_executor',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Сума компенсації за пробіг монтажнику\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='грн за км монтажнику'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='month_executor_pay',
            field=models.DateField(blank=True, help_text='оберіть будь-яку дату в межах місяця нарахування ЗП монтажнику', null=True, verbose_name='місяць/рік ЗП'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='pay_form',
            field=models.CharField(blank=True, choices=[('КО', 'КО'), ('РФ', 'РФ')], default='КО', help_text='Оберіть форму оплати', max_length=100, verbose_name='Форма оплати'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='price_of_completed_works',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума за виконані роботи'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='price_of_used_equipment',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='Сума за використане обладнання'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='sum_price_client',
            field=models.PositiveIntegerField(blank=True, default=0, help_text='сума рахунку для клієнта\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума рахунку'),
        ),
        migrations.AlterField(
            model_name='workorder',
            name='type_of_work',
            field=models.CharField(choices=[('Проект', 'Проект'), ('Сервіс', 'Сервіс')], default='Сервіс', help_text='Оберіть тип', max_length=100, verbose_name='Тип ЗН'),
        ),
        migrations.CreateModel(
            name='ServicePlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_create', models.DateField(default=datetime.date(2021, 8, 5), help_text='Введіть дату', verbose_name='Дата')),
                ('type_of_service', models.CharField(choices=[('монтаж', 'монтаж'), ('демонтаж', 'демонтаж'), ('демонтаж+монтаж', 'демонтаж+монтаж'), ('отправка', 'отправка'), ('ремонт', 'ремонт'), ('демонтаж+ремонт', 'демонтаж+ремонт'), ('монтаж+ремонт', 'монтаж+ремонт')], help_text='Оберіть тип', max_length=100, verbose_name='Тип робіт')),
                ('city', models.CharField(blank=True, choices=[('Київ', 'Київ'), ('Вінниця', 'Вінниця'), ('Луцьк', 'Луцьк'), ('Дніпро', 'Дніпро'), ('Житомир', 'Житомир'), ('Ужгород', 'Ужгород'), ('Запоріжжя', 'Запоріжжя'), ('Івано-Франківськ', 'Івано-Франківськ'), ('Кропивницький', 'Кропивницький'), ('Львів', 'Львів'), ('Миколаїв', 'Миколаїв'), ('Одеса', 'Одеса'), ('Полтава', 'Полтава'), ('Суми', 'Суми'), ('Рівне', 'Рівне'), ('Тернопіль', 'Тернопіль'), ('Харків', 'Харків'), ('Херсон', 'Херсон'), ('Хмельницький', 'Хмельницький'), ('Черкаси', 'Черкаси'), ('Чернігів', 'Чернігів'), ('Чернівці', 'Чернівці')], help_text='Оберіть місто', max_length=100, null=True, verbose_name='місто')),
                ('district', models.CharField(blank=True, choices=[('Київська', 'Київська'), ('Вінницька', 'Вінницька'), ('Волинська', 'Волинська'), ('Дніпропетровьска', 'Дніпропетровьска'), ('Житомирська', 'Житомирська'), ('Закарпатська', 'Закарпатська'), ('Запоріжська', 'Запоріжська'), ('Івано-Франківська', 'Івано-Франківська'), ('Кіровоградська', 'Кіровоградська'), ('Львівська', 'Львівська'), ('Миколаївська', 'Миколаївська'), ('Одеська', 'Одеська'), ('Полтавська', 'Полтавська'), ('Рівненська', 'Рівненська'), ('Сумська', 'Сумська'), ('Тернопільська', 'Тернопільська'), ('Харківська', 'Харківська'), ('Херсонська', 'Херсонська'), ('Хмельницька', 'Хмельницька'), ('Черкаська', 'Черкаська'), ('Чернігівська', 'Чернігівська'), ('Чернівецька', 'Чернівецька')], help_text='Оберіть область', max_length=100, null=True, verbose_name='область')),
                ('type_of_delivery', models.CharField(choices=[('власний автомобіль', 'власний автомобіль'), ('силами замовника', 'силами замовника'), ('перевізник', 'перевізник')], default='власний автомобіль', max_length=100, null=True, verbose_name='Спосіб проїду')),
                ('tasks', models.TextField(help_text='Опишіть перелік запланованих робіт', max_length=1000, null=True, verbose_name='Задачі')),
                ('date_planing', models.DateField(help_text='Введіть дату', verbose_name='Строк з / Дата')),
                ('time', models.CharField(help_text='Введіть дату або час вручну', max_length=100, verbose_name='Строк до / Час')),
                ('adress', models.CharField(max_length=100, null=True, verbose_name='Адреса')),
                ('wo_numb', models.PositiveIntegerField(blank=True, help_text='Номер ЗН', null=True, verbose_name='№')),
                ('date_ex', models.DateField(blank=True, help_text='Введіть дату', null=True, verbose_name='Дата виконання')),
                ('status', models.CharField(blank=True, choices=[('виконано', 'виконано'), ('перенесено', 'перенесено')], max_length=100, null=True, verbose_name='Статус виконання')),
                ('client', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_orders_plan', to='clients.Client', verbose_name='клієнт')),
                ('contact', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wo_plan_contact', to='clients.ContactProfile', verbose_name='Контактна особа')),
                ('contact_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wo_plan_contact_2', to='clients.ContactProfile', verbose_name='Дод. контактна особа')),
                ('executor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='work_orders_plan_ex', to=settings.AUTH_USER_MODEL, verbose_name='виконавець')),
                ('respons_manager', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wo_plan_response', to=settings.AUTH_USER_MODEL, verbose_name='Відповідальний')),
            ],
            options={
                'verbose_name_plural': 'План сервісних робіт',
            },
        ),
        migrations.CreateModel(
            name='Expertise',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_wo', models.DateField(help_text='Введіть дату', verbose_name='Дата демонтажу (ЗН)')),
                ('desription', models.CharField(blank=True, max_length=200, null=True, verbose_name='опис рекламації')),
                ('date_take_to_rapeir', models.DateField(blank=True, help_text='Введіть дату', null=True, verbose_name='Дата сдачі в ремонт')),
                ('date_receving_expertise', models.DateField(blank=True, help_text='Введіть дату', null=True, verbose_name='Дата отримання результатів експертизи (обладанання)')),
                ('malfunctions', models.CharField(blank=True, max_length=200, null=True, verbose_name='виявлені несправності')),
                ('result_expertise', models.CharField(blank=True, max_length=200, null=True, verbose_name='результати експертизи')),
                ('price_expertise', models.PositiveIntegerField(blank=True, null=True, verbose_name='Вартість робіт')),
                ('client', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='expertise', to='clients.Client', verbose_name='клієнт')),
                ('fuel_sensor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='fuel_sensor_expertise', to='products.FuelSensor', verbose_name='ДВРП')),
                ('gps', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='gps_expertise', to='products.Gps', verbose_name='БР')),
            ],
            options={
                'verbose_name_plural': 'Експертизи',
            },
        ),
        migrations.CreateModel(
            name='ExecutorPayment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('period', models.DateField(blank=True, help_text='місяць нарахування ЗП сервісному відділу - оберіть будь-яку дату в межах місяця', null=True, verbose_name='місяць/рік ЗП')),
                ('work_days_1', models.PositiveIntegerField(blank=True, default=0, help_text='кількість робочих днів(окрім вихідних)\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='роб.д. 1')),
                ('work_days_2', models.PositiveIntegerField(blank=True, default=0, help_text='кількість робочих днів(окрім вихідних)\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д. 2')),
                ('work_days_3', models.PositiveIntegerField(blank=True, help_text='кількість робочих днів(окрім вихідних)\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д. 3')),
                ('work_days_sum', models.PositiveIntegerField(blank=True, help_text='кількість робочих днів(окрім вихідних)\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д. заг')),
                ('work_days_weekend_1', models.PositiveIntegerField(blank=True, default=0, help_text='кількість робочих днів у вихідних\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д.вих 1')),
                ('work_days_weekend_2', models.PositiveIntegerField(blank=True, default=0, help_text='кількість робочих днів у вихідних\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д.вих 2')),
                ('work_days_weekend_3', models.PositiveIntegerField(blank=True, default=0, help_text='кількість робочих днів у вихідних\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д.вих 3')),
                ('work_days_weekend_sum', models.PositiveIntegerField(blank=True, default=0, help_text='кількість робочих днів у вихідних\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='р.д.вих заг.')),
                ('trip_day_1', models.FloatField(blank=True, default=0, help_text='кількість днів на які нараховано добові\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='добові 1')),
                ('trip_day_2', models.FloatField(blank=True, default=0, help_text='кількість днів на які нараховано добові\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='добові 2')),
                ('trip_day_3', models.FloatField(blank=True, default=0, help_text='кількість днів на які нараховано добові\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='добові 3')),
                ('trip_day_sum', models.FloatField(blank=True, default=0, help_text='кількість днів на які нараховано добові\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='добові заг')),
                ('trip_day_costs_1', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name=' грн добові 1')),
                ('trip_day_costs_2', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name=' грн добові 2')),
                ('trip_day_costs_3', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name=' грн добові 3')),
                ('qua_work_orders_1', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть ЗН 1')),
                ('qua_work_orders_2', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть ЗН 2')),
                ('qua_work_orders_3', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть ЗН 3')),
                ('qua_work_orders_sum', models.PositiveIntegerField(blank=True, default=0, help_text='заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть ЗН заг')),
                ('qua_works_1', models.PositiveIntegerField(blank=True, default=0, help_text='кількість виконаних робіт співробітником заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть вик. робіт 1')),
                ('qua_works_2', models.PositiveIntegerField(blank=True, default=0, help_text='кількість виконаних робіт співробітником заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть вик. робіт 2')),
                ('qua_works_3', models.PositiveIntegerField(blank=True, default=0, help_text='кількість виконаних робіт співробітником заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть вик. робіт 3')),
                ('qua_works_sum', models.PositiveIntegerField(blank=True, default=0, help_text='кількість виконаних робіт співробітником заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='к-ть вик. робіт заг')),
                ('qua_payment_works_1', models.PositiveIntegerField(blank=True, default=0, help_text='сума ЗП за роботи \nзаповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума ЗП 1')),
                ('qua_payment_works_2', models.PositiveIntegerField(blank=True, default=0, help_text='сума ЗП за роботи \nзаповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума ЗП 2')),
                ('qua_payment_works_3', models.PositiveIntegerField(blank=True, default=0, help_text='сума ЗП за роботи \nзаповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума ЗП 3')),
                ('qua_payment_works_sum', models.PositiveIntegerField(blank=True, default=0, help_text='сума ЗП за роботи \nзаповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума ЗП сумарно')),
                ('milege_price_1', models.PositiveIntegerField(blank=True, default=0, help_text='Сума компенсації за пробіг монтажнику\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='грн за км 1')),
                ('milege_price_2', models.PositiveIntegerField(blank=True, default=0, help_text='Сума компенсації за пробіг монтажнику\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='грн за км 2')),
                ('milege_price_3', models.PositiveIntegerField(blank=True, default=0, help_text='Сума компенсації за пробіг монтажнику\nПоле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='грн за км 3')),
                ('premium_sum', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума премії')),
                ('boss_premium', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума премії керівника')),
                ('premium_1', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума премії 1')),
                ('premium_2', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума премії 2')),
                ('premium_3', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='сума премії 3')),
                ('total_payment_1', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='загальна сума ЗП 1')),
                ('total_payment_2', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='загальна сума ЗП 2')),
                ('total_payment_3', models.PositiveIntegerField(blank=True, default=0, help_text='Поле заповниться автоматично, вводити нічого не потрібно', null=True, verbose_name='загальна сума ЗП 3')),
                ('executor_1', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executor_payment_1', to=settings.AUTH_USER_MODEL, verbose_name='співробітник 1')),
                ('executor_2', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executor_payment_2', to=settings.AUTH_USER_MODEL, verbose_name='співробітник 2')),
                ('executor_3', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='executor_payment_3', to=settings.AUTH_USER_MODEL, verbose_name='співробітник 3')),
            ],
            options={
                'verbose_name_plural': 'ЗП сервісний відділ',
            },
        ),
        migrations.CreateModel(
            name='ExecutorPaymentProxy',
            fields=[
            ],
            options={
                'verbose_name_plural': 'зведені дані ЗП по монтажникам',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('workorders.executorpayment',),
        ),
    ]
